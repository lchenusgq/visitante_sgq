"""
Django settings for visitante_sgq project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import dj_database_url

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

#print(f"base_dir: {BASE_DIR}")



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&v6c%&z0tw6-q+^!#axc47hujyip+spd-da+=xfem^f9s)0-@#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['visitante-sgq.onrender.com', 'localhost', '127.0.0.1']
#ALLOWED_HOSTS = ['*']      ## configuracion para el servidor ##


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',                      ## agregué para que funcione en windows ##
    #'registro_visitantes.apps.RegistroVisitantesConfig',
    'registro_visitantes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',        ## agregué para que funcione en windows ##
]

CORS_ALLOW_ALL_ORIGINS = True       ## agregué para que funcione en windows ##

ROOT_URLCONF = 'visitante_sgq.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'visitante_sgq.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}


if os.getenv('RENDER', '') == 'true':
    # Configuración para Render (producción)
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv('DATABASE_URL'),
            conn_max_age=600,
            ssl_require=True
        ),
        'personasDB': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'personasDB',
            'USER': 'postgres',
            'PASSWORD': 'postgres',
            'HOST': '192.168.60.11',
            'PORT': '5434',
            'OPTIONS': {
                'client_encoding': 'UTF8',
            }
        }
    }
else:
    # Configuración local (desarrollo)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'visitante_sgq',
            'USER': 'postgres',
            'PASSWORD': 'postgres',
            'HOST': 'localhost',
            'PORT': '5433',
        },
        'personasDB': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'personasDB',
            'USER': 'postgres',
            'PASSWORD': 'postgres',
            'HOST': '192.168.60.11',
            'PORT': '5434',
            'OPTIONS': {
                'client_encoding': 'UTF8',
            }
        }
    }



#DATABASES = {
#    'default': {    
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'visitante_sgq',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#        'HOST': 'localhost',
#        'PORT': '5433',
#        #'PORT': '5434',     ## configuracion para el servidor ##
#    },
#    'personasDB': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'personasDB',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#        'HOST': '192.168.60.11',
#        'PORT': '5434',
#        'OPTIONS': {
#            'client_encoding': 'UTF8',  # o prueba 'ISO8859-1' si no funciona  LATIN1
#        }
#    }
#}





# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
#TIME_ZONE = 'America/Asuncion'  # Ajusta a tu zona horaria
TIME_ZONE = 'America/Argentina/Buenos_Aires'  # Ajusta a tu zona horaria

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

#STATIC_URL = 'static/'
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'static'),
#]

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'registro_visitantes', 'static'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'auth.User'

""""
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/visitante_sgq/registro_visitantes/static/logfile.log',  # Ruta al archivo de log  
            #'filename': '//mnt/visitante_sgq//registro_visitantes//static//logfile.log',  # Ruta al archivo de log   ##para linux#
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'visitante_sgq': {  # Reemplaza con el nombre de tu aplicación
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
"""